# "이터러블": 반복할 수 있는 것 (반복문 뒤에 넣은 것)
# Iterate + able
# 리스트, 튜플, 딕셔너리

# "이터레이터": 반복하는 것 (이터러블을 만드는 방법 중 하나)
# Iterate + or

# - 제너레이터 표현식 (이터레이터를 만드는 방법 중 하나)
## 리스트 내포: 메모리 사용량이 많다
범위 = range(1, 100 + 1)
리스트내포 = [
    i * i
    for i in 범위
] # 과부하
print(리스트내포)

제너레이터표현식 = (
    i * i
    for i in 범위
)
for 요소 in 제너레이터표현식:
    # next(제너레이터표현식): 과부하 분산
    print(요소)

# 제너레이터 함수: 메모리 사용량이 적다
def 제너레이터함수():
    for i in range(1, 100 + 1):
        yield i * i

제너레이터 = 제너레이터함수()
for 요소 in 제너레이터:
    print(요소)

# 이터레이터 클래스